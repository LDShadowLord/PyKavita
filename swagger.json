{
  "openapi": "3.0.1",
  "info": {
    "title": "Kavita API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5000/",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/api/Account/reset-password": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update a user's password",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Account/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Register a new user on the server",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Perform a login. Will send JWT Token of the logged in user back.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/refresh-token": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRequestDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRequestDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRequestDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/roles": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get All Roles back. See API.Constants.PolicyConstants",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/update-rbs": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Sets the given roles to the user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRbsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRbsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRbsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Account/reset-api-key": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the API Key assigned with a user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/exists": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Book/{chapterId}/book-info": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "chapterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Book/{chapterId}/book-resources": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "chapterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Book/{chapterId}/chapters": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "chapterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookChapterItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookChapterItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookChapterItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Book/{chapterId}/book-page": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "chapterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Collection": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Return a list of all collection tags on the server",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionTagDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Collection/search": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Searches against the collection tags on the DB and returns matches that meet the search criteria.\r\n<remarks>Search strings will be cleaned of certain fields, like %</remarks>",
        "parameters": [
          {
            "name": "queryString",
            "in": "query",
            "description": "Search term",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionTagDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Collection/update": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Updates an existing tag with a new title, promotion status, and summary.\r\n<remarks>UI does not contain controls to update title</remarks>",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Collection/update-for-series": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Adds a collection tag onto multiple Series. If tag id is 0, this will create a new tag.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionTagBulkAddDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionTagBulkAddDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionTagBulkAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Collection/update-series": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "For a given tag, update the summary if summary has changed and remove a set of series from the tag.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesForTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesForTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesForTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Download/volume-size": {
      "get": {
        "tags": [
          "Download"
        ],
        "parameters": [
          {
            "name": "volumeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/Download/chapter-size": {
      "get": {
        "tags": [
          "Download"
        ],
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/Download/series-size": {
      "get": {
        "tags": [
          "Download"
        ],
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/Download/volume": {
      "get": {
        "tags": [
          "Download"
        ],
        "parameters": [
          {
            "name": "volumeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Download/chapter": {
      "get": {
        "tags": [
          "Download"
        ],
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Download/series": {
      "get": {
        "tags": [
          "Download"
        ],
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Download/bookmarks": {
      "post": {
        "tags": [
          "Download"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadBookmarkDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadBookmarkDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadBookmarkDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Image/chapter-cover": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Returns cover image for Chapter",
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Image/volume-cover": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Returns cover image for Volume",
        "parameters": [
          {
            "name": "volumeId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Image/series-cover": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Returns cover image for Series",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "description": "Id of Series",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Image/collection-cover": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Returns cover image for Collection Tag",
        "parameters": [
          {
            "name": "collectionTagId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Image/bookmark": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Returns image for a given bookmark page",
        "description": "This request is served unauthenticated, but user must be passed via api key to validate",
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNum",
            "in": "query",
            "description": "Starts at 0",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "apiKey",
            "in": "query",
            "description": "API Key for user. Needed to authenticate request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Library/create": {
      "post": {
        "tags": [
          "Library"
        ],
        "summary": "Creates a new Library. Upon library creation, adds new library to all Admin accounts.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLibraryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLibraryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLibraryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Library/list": {
      "get": {
        "tags": [
          "Library"
        ],
        "summary": "Returns a list of directories for a given path. If path is empty, returns root drives.",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Library": {
      "get": {
        "tags": [
          "Library"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Library/grant-access": {
      "post": {
        "tags": [
          "Library"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLibraryForUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLibraryForUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLibraryForUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Library/scan": {
      "post": {
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Library/refresh-metadata": {
      "post": {
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Library/libraries": {
      "get": {
        "tags": [
          "Library"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Library/delete": {
      "delete": {
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Library/update": {
      "post": {
        "tags": [
          "Library"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLibraryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLibraryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLibraryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Library/search": {
      "get": {
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "name": "queryString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Library/type": {
      "get": {
        "tags": [
          "Library"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryType"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metadata/genres": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Fetches genres from the instance",
        "parameters": [
          {
            "name": "libraryIds",
            "in": "query",
            "description": "String separated libraryIds or null for all genres",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenreTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenreTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenreTagDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Metadata/people": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Fetches people from the instance",
        "parameters": [
          {
            "name": "libraryIds",
            "in": "query",
            "description": "String separated libraryIds or null for all people",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Metadata/tags": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Fetches all tags from the instance",
        "parameters": [
          {
            "name": "libraryIds",
            "in": "query",
            "description": "String separated libraryIds or null for all tags",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Metadata/age-ratings": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Fetches all age ratings from the instance",
        "parameters": [
          {
            "name": "libraryIds",
            "in": "query",
            "description": "String separated libraryIds or null for all ratings",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeRatingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeRatingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeRatingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Metadata/publication-status": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Fetches all publication status' from the instance",
        "parameters": [
          {
            "name": "libraryIds",
            "in": "query",
            "description": "String separated libraryIds or null for all publication status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeRatingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeRatingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeRatingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Metadata/languages": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Fetches all age ratings from the instance",
        "parameters": [
          {
            "name": "libraryIds",
            "in": "query",
            "description": "String separated libraryIds or null for all ratings",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Opds/{apiKey}": {
      "post": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/libraries": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/collections": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/collections/{collectionId}": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/reading-list": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/reading-list/{readingListId}": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "readingListId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/libraries/{libraryId}": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/recently-added": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/on-deck": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/series": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/search": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/series/{seriesId}": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seriesId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seriesId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}/chapter/{chapterId}": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seriesId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "chapterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}/chapter/{chapterId}/download/{filename}": {
      "get": {
        "tags": [
          "Opds"
        ],
        "summary": "Downloads a file",
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seriesId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "chapterId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "description": "Not used. Only for Chunky to allow download links",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/image": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seriesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "volumeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "chapterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opds/{apiKey}/favicon": {
      "get": {
        "tags": [
          "Opds"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Plugin/authenticate": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "Authenticate with the Server given an apiKey. This will log you in by returning the user object and the JWT token.",
        "parameters": [
          {
            "name": "apiKey",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pluginName",
            "in": "query",
            "description": "Name of the Plugin",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/image": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns an image for a given chapter. Side effect: This will cache the chapter images for reading.",
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/chapter-info": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns various information about a Chapter. Side effect: This will cache the chapter images for reading.",
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/mark-read": {
      "post": {
        "tags": [
          "Reader"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/mark-unread": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks a Series as Unread (progress)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/mark-volume-unread": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks all chapters within a volume as unread",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumeReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumeReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumeReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/mark-volume-read": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks all chapters within a volume as Read",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumeReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumeReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumeReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/mark-multiple-read": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks all chapters within a list of volumes as Read. All volumes must belong to the same Series.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumesReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumesReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumesReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/mark-multiple-unread": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks all chapters within a list of volumes as Unread. All volumes must belong to the same Series.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumesReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumesReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkVolumesReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/mark-multiple-series-read": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks all chapters within a list of series as Read.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMultipleSeriesAsReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMultipleSeriesAsReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMultipleSeriesAsReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/mark-multiple-series-unread": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks all chapters within a list of series as Unread.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMultipleSeriesAsReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMultipleSeriesAsReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMultipleSeriesAsReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/get-progress": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns Progress (page number) for a chapter for the logged in user",
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/progress": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Save page against Chapter for logged in user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/continue-point": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Continue point is the chapter which you should start reading again from. If there is no progress on a series, then the first chapter will be returned (non-special unless only specials).\r\nOtherwise, loop through the chapters and volumes in order to find the next chapter which has progress.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/has-progress": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns if the user has reading progress on the Series",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/mark-chapter-until-as-read": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Marks every chapter that is sorted below the passed number as Read. This will not mark any specials as read.",
        "description": "This is built for Tachiyomi and is not expected to be called by any other place",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "chapterNumber",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/get-bookmarks": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns a list of bookmarked pages for a given Chapter",
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/get-all-bookmarks": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns a list of all bookmarked pages for a User",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/remove-bookmarks": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Removes all bookmarks for all chapters linked to a Series",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveBookmarkForSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveBookmarkForSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveBookmarkForSeriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/get-volume-bookmarks": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns all bookmarked pages for a given volume",
        "parameters": [
          {
            "name": "volumeId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/get-series-bookmarks": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns all bookmarked pages for a given series",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/bookmark": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Bookmarks a page against a Chapter",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/unbookmark": {
      "post": {
        "tags": [
          "Reader"
        ],
        "summary": "Removes a bookmarked page for a Chapter",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Reader/next-chapter": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns the next logical chapter from the series.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "volumeId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentChapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reader/prev-chapter": {
      "get": {
        "tags": [
          "Reader"
        ],
        "summary": "Returns the previous logical chapter from the series.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "volumeId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentChapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReadingList": {
      "get": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Fetches a single Reading List",
        "parameters": [
          {
            "name": "readingListId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListDto"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Deletes a reading list",
        "parameters": [
          {
            "name": "readingListId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/lists": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Returns reading lists (paginated) for a given user.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includePromoted",
            "in": "query",
            "description": "Defaults to true",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ReadingList/items": {
      "get": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Fetches all reading list items for a given list including rich metadata around series, volume, chapters, and progress",
        "description": "This call is expensive",
        "parameters": [
          {
            "name": "readingListId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadingListItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ReadingList/update-position": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Updates an items position",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListPosition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListPosition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/delete-item": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Deletes a list item from the list. Will reorder all item positions afterwards",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListPosition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListPosition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/remove-read": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Removes all entries that are fully read from the reading list",
        "parameters": [
          {
            "name": "readingListId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/create": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Creates a new List with a unique title. Returns the new ReadingList back",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReadingListDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReadingListDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReadingListDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadingListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadingListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadingListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReadingList/update": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Update the properties (title, summary) of a reading list",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/update-by-series": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Adds all chapters from a Series to a reading list",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListBySeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListBySeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListBySeriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/update-by-multiple": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Adds all chapters from a list of volumes and chapters to a reading list",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByMultipleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByMultipleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByMultipleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/update-by-multiple-series": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Adds all chapters from a list of series to a reading list",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByMultipleSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByMultipleSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByMultipleSeriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/update-by-volume": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByVolumeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByVolumeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByVolumeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/update-by-chapter": {
      "post": {
        "tags": [
          "ReadingList"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByChapterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByChapterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadingListByChapterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReadingList/next-chapter": {
      "get": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Returns the next chapter within the reading list",
        "parameters": [
          {
            "name": "currentChapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "readingListId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReadingList/prev-chapter": {
      "get": {
        "tags": [
          "ReadingList"
        ],
        "summary": "Returns the prev chapter within the reading list",
        "parameters": [
          {
            "name": "currentChapterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "readingListId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Series": {
      "post": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Series"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Series"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Series"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/{seriesId}": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Fetches a Series for a given Id",
        "parameters": [
          {
            "name": "seriesId",
            "in": "path",
            "description": "Series Id to fetch details for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "seriesId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/delete-multiple": {
      "post": {
        "tags": [
          "Series"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSeriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Series/volumes": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Returns All volumes for a series with progress information and Chapters",
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VolumeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VolumeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VolumeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/volume": {
      "get": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "volumeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/chapter": {
      "get": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "chapterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/update-rating": {
      "post": {
        "tags": [
          "Series"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesRatingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesRatingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesRatingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Series/update": {
      "post": {
        "tags": [
          "Series"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Series/recently-added": {
      "post": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/all": {
      "post": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/on-deck": {
      "post": {
        "tags": [
          "Series"
        ],
        "summary": "Fetches series that are on deck aka have progress on them.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "libraryId",
            "in": "query",
            "description": "Default of 0 meaning all libraries",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/refresh-metadata": {
      "post": {
        "tags": [
          "Series"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSeriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Series/scan": {
      "post": {
        "tags": [
          "Series"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSeriesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Series/metadata": {
      "get": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "seriesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesMetadataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesMetadataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesMetadataDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Series"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesMetadataDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesMetadataDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeriesMetadataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Series/series-by-collection": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Returns all Series grouped by the passed Collection Id with Pagination.",
        "parameters": [
          {
            "name": "collectionId",
            "in": "query",
            "description": "Collection Id to pull series from",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/series-by-ids": {
      "post": {
        "tags": [
          "Series"
        ],
        "summary": "Fetches Series for a set of Ids. This will check User for permission access and filter out any Ids that don't exist or\r\nthe user does not have access to.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesByIdsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesByIdsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesByIdsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeriesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Series/age-rating": {
      "get": {
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "name": "ageRating",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Server/restart": {
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Attempts to Restart the server. Does not work, will shutdown the instance.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Server/clear-cache": {
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Performs an ad-hoc cleanup of Cache",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Server/backup-db": {
      "post": {
        "tags": [
          "Server"
        ],
        "summary": "Performs an ad-hoc backup of the Database",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Server/server-info": {
      "get": {
        "tags": [
          "Server"
        ],
        "summary": "Returns non-sensitive information about the current system",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Server/logs": {
      "get": {
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Server/check-update": {
      "get": {
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNotificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNotificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNotificationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Server/changelog": {
      "get": {
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateNotificationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateNotificationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateNotificationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/base-url": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerSettingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerSettingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerSettingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/reset": {
      "post": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSettingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/task-frequencies": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/library-types": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/log-levels": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/opds-enabled": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Settings/authentication-enabled": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Upload/series": {
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "Replaces series cover image and locks it with a base64 encoded image",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Upload/collection": {
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "Replaces collection tag cover image and locks it with a base64 encoded image",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Upload/chapter": {
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "Replaces chapter cover image and locks it with a base64 encoded image. This will update the parent volume's cover image.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Upload/reset-chapter-lock": {
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "Replaces chapter cover image and locks it with a base64 encoded image. This will update the parent volume's cover image.",
        "requestBody": {
          "description": "Does not use Url property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Users/delete-user": {
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/names": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/has-reading-progress": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/has-library-access": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/update-preferences": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgeRating": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        "type": "integer",
        "description": "Represents Age Rating for content.",
        "format": "int32"
      },
      "AgeRatingDto": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/AgeRating"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastActive": {
            "type": "string",
            "format": "date-time"
          },
          "libraries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Library"
            },
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserRole"
            },
            "nullable": true
          },
          "progresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserProgress"
            },
            "nullable": true
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserRating"
            },
            "nullable": true
          },
          "userPreferences": {
            "$ref": "#/components/schemas/AppUserPreferences"
          },
          "bookmarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserBookmark"
            },
            "nullable": true
          },
          "readingLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadingList"
            },
            "description": "Reading lists associated with this user",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "description": "An API Key to interact with external services, like OPDS",
            "nullable": true
          },
          "rowVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AppUserBookmark": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "chapterId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "description": "Filename in the Bookmark Directory",
            "nullable": true
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a saved page in a Chapter entity for a given user."
      },
      "AppUserPreferences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "readingDirection": {
            "$ref": "#/components/schemas/ReadingDirection"
          },
          "scalingOption": {
            "$ref": "#/components/schemas/ScalingOption"
          },
          "pageSplitOption": {
            "$ref": "#/components/schemas/PageSplitOption"
          },
          "readerMode": {
            "$ref": "#/components/schemas/ReaderMode"
          },
          "autoCloseMenu": {
            "type": "boolean",
            "description": "Manga Reader Option: Allow the menu to close after 6 seconds without interaction"
          },
          "bookReaderDarkMode": {
            "type": "boolean",
            "description": "Book Reader Option: Should the background color be dark"
          },
          "bookReaderMargin": {
            "type": "integer",
            "description": "Book Reader Option: Override extra Margin",
            "format": "int32"
          },
          "bookReaderLineSpacing": {
            "type": "integer",
            "description": "Book Reader Option: Override line-height",
            "format": "int32"
          },
          "bookReaderFontSize": {
            "type": "integer",
            "description": "Book Reader Option: Override font size",
            "format": "int32"
          },
          "bookReaderFontFamily": {
            "type": "string",
            "description": "Book Reader Option: Maps to the default Kavita font-family (inherit) or an override",
            "nullable": true
          },
          "bookReaderTapToPaginate": {
            "type": "boolean",
            "description": "Book Reader Option: Allows tapping on side of screens to paginate"
          },
          "bookReaderReadingDirection": {
            "$ref": "#/components/schemas/ReadingDirection"
          },
          "siteDarkMode": {
            "type": "boolean",
            "description": "UI Site Global Setting: Whether the UI should render in Dark mode or not."
          },
          "appUser": {
            "$ref": "#/components/schemas/AppUser"
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppUserProgress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of Entity",
            "format": "int32"
          },
          "pagesRead": {
            "type": "integer",
            "description": "Pages Read for given Chapter",
            "format": "int32"
          },
          "volumeId": {
            "type": "integer",
            "description": "Volume belonging to Chapter",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "description": "Series belonging to Chapter",
            "format": "int32"
          },
          "chapterId": {
            "type": "integer",
            "description": "Chapter",
            "format": "int32"
          },
          "bookScrollId": {
            "type": "string",
            "description": "For Book Reader, represents the nearest passed anchor on the screen that can be used to resume scroll point\r\non next load",
            "nullable": true
          },
          "appUser": {
            "$ref": "#/components/schemas/AppUser"
          },
          "appUserId": {
            "type": "integer",
            "description": "User this progress belongs to",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "description": "When this was first created",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "description": "Last date this was updated",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Represents the progress a single user has on a given Chapter."
      },
      "AppUserRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "type": "integer",
            "description": "A number between 0-5 that represents how good a series is.",
            "format": "int32"
          },
          "review": {
            "type": "string",
            "description": "A short summary the user can write when giving their review.",
            "nullable": true
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          },
          "appUser": {
            "$ref": "#/components/schemas/AppUser"
          }
        },
        "additionalProperties": false
      },
      "AppUserRole": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/AppUser"
          },
          "role": {
            "$ref": "#/components/schemas/AppRole"
          }
        },
        "additionalProperties": false
      },
      "BookChapterItem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the Chapter",
            "nullable": true
          },
          "part": {
            "type": "string",
            "description": "A part represents the id of the anchor so we can scroll to it. 01_values.xhtml#h_sVZPaxUSy/",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Page Number to load for the chapter",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookChapterItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookInfoDto": {
        "type": "object",
        "properties": {
          "bookTitle": {
            "type": "string",
            "nullable": true
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesFormat": {
            "$ref": "#/components/schemas/MangaFormat"
          },
          "seriesName": {
            "type": "string",
            "nullable": true
          },
          "chapterNumber": {
            "type": "string",
            "nullable": true
          },
          "volumeNumber": {
            "type": "string",
            "nullable": true
          },
          "libraryId": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "isSpecial": {
            "type": "boolean"
          },
          "chapterTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookmarkDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "chapterId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Chapter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "range": {
            "type": "string",
            "description": "Range of numbers. Chapter 2-4 -> \"2-4\". Chapter 2 -> \"2\".",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Smallest number of the Range. Can be a partial like Chapter 4.5",
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MangaFile"
            },
            "description": "The files that represent this Chapter",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "coverImage": {
            "type": "string",
            "description": "Absolute path to the (managed) image file",
            "nullable": true
          },
          "coverImageLocked": {
            "type": "boolean"
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages in all MangaFiles",
            "format": "int32"
          },
          "isSpecial": {
            "type": "boolean",
            "description": "If this Chapter contains files that could only be identified as Series or has Special Identifier from filename"
          },
          "title": {
            "type": "string",
            "description": "Used for books/specials to display custom title. For non-specials/books, will be set to API.Entities.Chapter.Range",
            "nullable": true
          },
          "ageRating": {
            "$ref": "#/components/schemas/AgeRating"
          },
          "titleName": {
            "type": "string",
            "description": "Chapter title",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "description": "Date which chapter was released",
            "format": "date-time"
          },
          "summary": {
            "type": "string",
            "description": "Summary for the Chapter/Issue",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language for the Chapter/Issue",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of issues in the series",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "Number in the Total Count",
            "format": "int32"
          },
          "people": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            },
            "description": "All people attached at a Chapter level. Usually Comics will have different people per issue.",
            "nullable": true
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre"
            },
            "description": "Genres for the Chapter",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          },
          "volume": {
            "$ref": "#/components/schemas/Volume"
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChapterDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "range": {
            "type": "string",
            "description": "Range of chapters. Chapter 2-4 -> \"2-4\". Chapter 2 -> \"2\".",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Smallest number of the Range.",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages in all MangaFiles",
            "format": "int32"
          },
          "isSpecial": {
            "type": "boolean",
            "description": "If this Chapter contains files that could only be identified as Series or has Special Identifier from filename"
          },
          "title": {
            "type": "string",
            "description": "Used for books/specials to display custom title. For non-specials/books, will be set to API.DTOs.ChapterDto.Range",
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MangaFileDto"
            },
            "description": "The files that represent this Chapter",
            "nullable": true
          },
          "pagesRead": {
            "type": "integer",
            "description": "Calculated at API time. Number of pages read for this Chapter for logged in user.",
            "format": "int32"
          },
          "coverImageLocked": {
            "type": "boolean",
            "description": "If the Cover Image is locked for this entity"
          },
          "volumeId": {
            "type": "integer",
            "description": "Volume Id this Chapter belongs to",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "description": "When chapter was created",
            "format": "date-time"
          },
          "releaseDate": {
            "type": "string",
            "description": "When the chapter was released.",
            "format": "date-time"
          },
          "titleName": {
            "type": "string",
            "description": "Title of the Chapter/Issue",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "Summary for the Chapter/Issue",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language for the Chapter/Issue",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "Number in the TotalCount of issues",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of issues for the series",
            "format": "int32"
          },
          "writers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "penciller": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "inker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "colorist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "letterer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "coverArtist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "editor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "publisher": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "translators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Chapter is the lowest grouping of a reading medium. A Chapter contains a set of MangaFiles which represents the underlying\r\nfile (abstracted from type)."
      },
      "ChapterInfoDto": {
        "type": "object",
        "properties": {
          "chapterNumber": {
            "type": "string",
            "nullable": true
          },
          "volumeNumber": {
            "type": "string",
            "nullable": true
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesName": {
            "type": "string",
            "nullable": true
          },
          "seriesFormat": {
            "$ref": "#/components/schemas/MangaFormat"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "libraryId": {
            "type": "integer",
            "format": "int32"
          },
          "chapterTitle": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "isSpecial": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CollectionTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Visible title of the Tag",
            "nullable": true
          },
          "coverImage": {
            "type": "string",
            "description": "Absolute path to the (managed) image file",
            "nullable": true
          },
          "coverImageLocked": {
            "type": "boolean",
            "description": "Denotes if the CoverImage has been overridden by the user. If so, it will not be updated during normal scan operations."
          },
          "summary": {
            "type": "string",
            "description": "A description of the tag",
            "nullable": true
          },
          "normalizedTitle": {
            "type": "string",
            "description": "A normalized string used to check if the tag already exists in the DB",
            "nullable": true
          },
          "promoted": {
            "type": "boolean",
            "description": "A promoted collection tag will allow all linked seriesMetadata's Series to show for all users."
          },
          "seriesMetadatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeriesMetadata"
            },
            "nullable": true
          },
          "rowVersion": {
            "type": "integer",
            "description": "Not Used due to not using concurrency update",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a user entered field that is used as a tagging and grouping mechanism"
      },
      "CollectionTagBulkAddDto": {
        "type": "object",
        "properties": {
          "collectionTagId": {
            "type": "integer",
            "description": "Collection Tag Id",
            "format": "int32"
          },
          "collectionTagTitle": {
            "type": "string",
            "nullable": true
          },
          "seriesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Series Ids to add onto Collection Tag",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollectionTagDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "promoted": {
            "type": "boolean"
          },
          "coverImageLocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateLibraryDto": {
        "required": [
          "folders",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/LibraryType"
          },
          "folders": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateReadingListDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteSeriesDto": {
        "type": "object",
        "properties": {
          "seriesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DownloadBookmarkDto": {
        "type": "object",
        "properties": {
          "bookmarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookmarkDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterDto": {
        "type": "object",
        "properties": {
          "formats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MangaFormat"
            },
            "description": "The type of Formats you want to be returned. An empty list will return all formats back",
            "nullable": true
          },
          "readStatus": {
            "$ref": "#/components/schemas/ReadStatus"
          },
          "libraries": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of library ids to restrict search to. Defaults to all libraries by passing empty list",
            "nullable": true
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Genre ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "writers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Writers to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "penciller": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Penciller ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "inker": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Inker ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "colorist": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Colorist ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "letterer": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Letterer ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "coverArtist": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of CoverArtist ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "editor": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Editor ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "publisher": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Publisher ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "character": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Character ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "translators": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Translator ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "collectionTags": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Collection Tag ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Tag ids to restrict search to. Defaults to all genres by passing an empty list",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "description": "Will return back everything with the rating and above\r\nAPI.Entities.AppUserRating.Rating",
            "format": "int32"
          },
          "sortOptions": {
            "$ref": "#/components/schemas/SortOptions"
          },
          "ageRating": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeRating"
            },
            "description": "Age Ratings. Empty list will return everything back",
            "nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Languages (ISO 639-1 code) to filter by. Empty list will return everything back",
            "nullable": true
          },
          "publicationStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicationStatus"
            },
            "description": "Publication statuses to filter by. Empty list will return everything back",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FolderPath": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "lastScanned": {
            "type": "string",
            "description": "Used when scanning to see if we can skip if nothing has changed. (not implemented)",
            "format": "date-time"
          },
          "library": {
            "$ref": "#/components/schemas/Library"
          },
          "libraryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Genre": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "normalizedTitle": {
            "type": "string",
            "nullable": true
          },
          "externalTag": {
            "type": "boolean"
          },
          "seriesMetadatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeriesMetadata"
            },
            "nullable": true
          },
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chapter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenreTagDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Library": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "coverImage": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LibraryType"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "lastScanned": {
            "type": "string",
            "description": "Last time Library was scanned",
            "format": "date-time"
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPath"
            },
            "nullable": true
          },
          "appUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUser"
            },
            "nullable": true
          },
          "series": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Series"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LibraryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastScanned": {
            "type": "string",
            "description": "Last time Library was scanned",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/LibraryType"
          },
          "folders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LibraryType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MangaFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "filePath": {
            "type": "string",
            "description": "Absolute path to the archive file",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "description": "Number of pages for the given file",
            "format": "int32"
          },
          "format": {
            "$ref": "#/components/schemas/MangaFormat"
          },
          "lastModified": {
            "type": "string",
            "description": "Last time underlying file was modified",
            "format": "date-time"
          },
          "chapter": {
            "$ref": "#/components/schemas/Chapter"
          },
          "chapterId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a wrapper to the underlying file. This provides information around file, like number of pages, format, etc."
      },
      "MangaFileDto": {
        "type": "object",
        "properties": {
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "format": {
            "$ref": "#/components/schemas/MangaFormat"
          }
        },
        "additionalProperties": false
      },
      "MangaFormat": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "Represents the format of the file",
        "format": "int32"
      },
      "MarkMultipleSeriesAsReadDto": {
        "type": "object",
        "properties": {
          "seriesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkReadDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MarkVolumeReadDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MarkVolumesReadDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "volumeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of Volumes to mark read",
            "nullable": true
          },
          "chapterIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of additional Chapters to mark as read",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is used for bulk updating a set of volume and or chapters in one go"
      },
      "MemberDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastActive": {
            "type": "string",
            "format": "date-time"
          },
          "libraries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryDto"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a member of a Kavita server."
      },
      "PageSplitOption": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/PersonRole"
          },
          "seriesMetadatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeriesMetadata"
            },
            "nullable": true
          },
          "chapterMetadatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chapter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/PersonRole"
          }
        },
        "additionalProperties": false
      },
      "PersonRole": {
        "enum": [
          1,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProgressDto": {
        "type": "object",
        "properties": {
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "chapterId": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "bookScrollId": {
            "type": "string",
            "description": "For Book reader, this can be an optional string of the id of a part marker, to help resume reading position\r\non pages that combine multiple \"chapters\".",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PublicationStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReaderMode": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReadingDirection": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReadingList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "promoted": {
            "type": "boolean",
            "description": "Reading lists that are promoted are only done by admins"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadingListItem"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          },
          "appUser": {
            "$ref": "#/components/schemas/AppUser"
          }
        },
        "additionalProperties": false,
        "description": "This is a collection of API.Entities.ReadingListItem which represent individual chapters and an order."
      },
      "ReadingListDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "promoted": {
            "type": "boolean",
            "description": "Reading lists that are promoted are only done by admins"
          }
        },
        "additionalProperties": false
      },
      "ReadingListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "chapterId": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "description": "Order of the chapter within a Reading List",
            "format": "int32"
          },
          "readingList": {
            "$ref": "#/components/schemas/ReadingList"
          },
          "readingListId": {
            "type": "integer",
            "format": "int32"
          },
          "series": {
            "$ref": "#/components/schemas/Series"
          },
          "volume": {
            "$ref": "#/components/schemas/Volume"
          },
          "chapter": {
            "$ref": "#/components/schemas/Chapter"
          }
        },
        "additionalProperties": false
      },
      "ReadingListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "chapterId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesName": {
            "type": "string",
            "nullable": true
          },
          "seriesFormat": {
            "$ref": "#/components/schemas/MangaFormat"
          },
          "pagesRead": {
            "type": "integer",
            "format": "int32"
          },
          "pagesTotal": {
            "type": "integer",
            "format": "int32"
          },
          "chapterNumber": {
            "type": "string",
            "nullable": true
          },
          "volumeNumber": {
            "type": "string",
            "nullable": true
          },
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "libraryId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "readingListId": {
            "type": "integer",
            "description": "Used internally only",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReadStatus": {
        "type": "object",
        "properties": {
          "notRead": {
            "type": "boolean"
          },
          "inProgress": {
            "type": "boolean"
          },
          "read": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Represents the Reading Status. This is a flag and allows multiple statues"
      },
      "RefreshSeriesDto": {
        "type": "object",
        "properties": {
          "libraryId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterDto": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "minLength": 6,
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RemoveBookmarkForSeriesDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ScalingOption": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "SearchResultDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "originalName": {
            "type": "string",
            "nullable": true
          },
          "sortName": {
            "type": "string",
            "nullable": true
          },
          "localizedName": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "$ref": "#/components/schemas/MangaFormat"
          },
          "libraryName": {
            "type": "string",
            "nullable": true
          },
          "libraryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Series": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The UI visible Name of the Series. This may or may not be the same as the OriginalName",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "description": "Used internally for name matching. M:API.Parser.Parser.Normalize(System.String)",
            "nullable": true
          },
          "sortName": {
            "type": "string",
            "description": "The name used to sort the Series. By default, will be the same as Name.",
            "nullable": true
          },
          "localizedName": {
            "type": "string",
            "description": "Name in original language (Japanese for Manga). By default, will be same as Name.",
            "nullable": true
          },
          "originalName": {
            "type": "string",
            "description": "Original Name on disk. Not exposed to UI.",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "coverImage": {
            "type": "string",
            "description": "Absolute path to the (managed) image file",
            "nullable": true
          },
          "coverImageLocked": {
            "type": "boolean",
            "description": "Denotes if the CoverImage has been overridden by the user. If so, it will not be updated during normal scan operations."
          },
          "pages": {
            "type": "integer",
            "description": "Sum of all Volume page counts",
            "format": "int32"
          },
          "format": {
            "$ref": "#/components/schemas/MangaFormat"
          },
          "metadata": {
            "$ref": "#/components/schemas/SeriesMetadata"
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserRating"
            },
            "nullable": true
          },
          "progress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppUserProgress"
            },
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volume"
            },
            "nullable": true
          },
          "library": {
            "$ref": "#/components/schemas/Library"
          },
          "libraryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SeriesByIdsDto": {
        "type": "object",
        "properties": {
          "seriesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SeriesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "originalName": {
            "type": "string",
            "nullable": true
          },
          "localizedName": {
            "type": "string",
            "nullable": true
          },
          "sortName": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "coverImageLocked": {
            "type": "boolean"
          },
          "pagesRead": {
            "type": "integer",
            "description": "Sum of pages read from linked Volumes. Calculated at API-time.",
            "format": "int32"
          },
          "userRating": {
            "type": "integer",
            "description": "Rating from logged in user. Calculated at API-time.",
            "format": "int32"
          },
          "userReview": {
            "type": "string",
            "description": "Review from logged in user. Calculated at API-time.",
            "nullable": true
          },
          "format": {
            "$ref": "#/components/schemas/MangaFormat"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "libraryId": {
            "type": "integer",
            "format": "int32"
          },
          "libraryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SeriesMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "collectionTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionTag"
            },
            "nullable": true
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          },
          "people": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            },
            "description": "All people attached at a Series level.",
            "nullable": true
          },
          "ageRating": {
            "$ref": "#/components/schemas/AgeRating"
          },
          "releaseYear": {
            "type": "integer",
            "description": "Earliest Year from all chapters",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "description": "Language of the content (BCP-47 code)",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "Total number of issues in the series",
            "format": "int32"
          },
          "publicationStatus": {
            "$ref": "#/components/schemas/PublicationStatus"
          },
          "series": {
            "$ref": "#/components/schemas/Series"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "rowVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SeriesMetadataDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "collectionTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionTagDto"
            },
            "description": "Collections the Series belongs to",
            "nullable": true
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenreTagDto"
            },
            "description": "Genres for the Series",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            },
            "description": "Collection of all Tags from underlying chapters for a Series",
            "nullable": true
          },
          "writers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "coverArtists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "publishers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "characters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "pencillers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "inkers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "colorists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "letterers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "editors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "translators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "ageRating": {
            "$ref": "#/components/schemas/AgeRating"
          },
          "releaseYear": {
            "type": "integer",
            "description": "Earliest Year from all chapters",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "description": "Language of the content (BCP-47 code)",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "Number in the TotalCount of issues",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of issues for the series",
            "format": "int32"
          },
          "publicationStatus": {
            "$ref": "#/components/schemas/PublicationStatus"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServerInfoDto": {
        "type": "object",
        "properties": {
          "installId": {
            "type": "string",
            "nullable": true
          },
          "os": {
            "type": "string",
            "nullable": true
          },
          "isDocker": {
            "type": "boolean"
          },
          "dotnetVersion": {
            "type": "string",
            "nullable": true
          },
          "kavitaVersion": {
            "type": "string",
            "nullable": true
          },
          "numOfCores": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServerSettingDto": {
        "type": "object",
        "properties": {
          "cacheDirectory": {
            "type": "string",
            "nullable": true
          },
          "taskScan": {
            "type": "string",
            "nullable": true
          },
          "loggingLevel": {
            "type": "string",
            "description": "Logging level for server. Managed in appsettings.json.",
            "nullable": true
          },
          "taskBackup": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "description": "Port the server listens on. Managed in appsettings.json.",
            "format": "int32"
          },
          "allowStatCollection": {
            "type": "boolean",
            "description": "Allows anonymous information to be collected and sent to KavitaStats"
          },
          "enableOpds": {
            "type": "boolean",
            "description": "Enables OPDS connections to be made to the server."
          },
          "enableAuthentication": {
            "type": "boolean",
            "description": "Enables Authentication on the server. Defaults to true."
          },
          "baseUrl": {
            "type": "string",
            "description": "Base Url for the kavita. Requires restart to take effect.",
            "nullable": true
          },
          "bookmarksDirectory": {
            "type": "string",
            "description": "Where Bookmarks are stored.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SortField": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "SortOptions": {
        "type": "object",
        "properties": {
          "sortField": {
            "$ref": "#/components/schemas/SortField"
          },
          "isAscending": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Sorting Options for a query"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "normalizedTitle": {
            "type": "string",
            "nullable": true
          },
          "externalTag": {
            "type": "boolean"
          },
          "seriesMetadatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeriesMetadata"
            },
            "nullable": true
          },
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chapter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenRequestDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLibraryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLibraryForUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "selectedLibraries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateNotificationDto": {
        "type": "object",
        "properties": {
          "currentVersion": {
            "type": "string",
            "description": "Current installed Version",
            "nullable": true
          },
          "updateVersion": {
            "type": "string",
            "description": "Semver of the release version\r\n<example>0.4.3</example>",
            "nullable": true
          },
          "updateBody": {
            "type": "string",
            "description": "Release body in HTML",
            "nullable": true
          },
          "updateTitle": {
            "type": "string",
            "description": "Title of the release",
            "nullable": true
          },
          "updateUrl": {
            "type": "string",
            "description": "Github Url",
            "nullable": true
          },
          "isDocker": {
            "type": "boolean",
            "description": "If this install is within Docker"
          },
          "isPrerelease": {
            "type": "boolean",
            "description": "Is this a pre-release"
          },
          "publishDate": {
            "type": "string",
            "description": "Date of the publish",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update Notification denoting a new release available for user to update to"
      },
      "UpdateRbsDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReadingListByChapterDto": {
        "type": "object",
        "properties": {
          "chapterId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "readingListId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateReadingListByMultipleDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "readingListId": {
            "type": "integer",
            "format": "int32"
          },
          "volumeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "chapterIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReadingListByMultipleSeriesDto": {
        "type": "object",
        "properties": {
          "readingListId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReadingListBySeriesDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "readingListId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateReadingListByVolumeDto": {
        "type": "object",
        "properties": {
          "volumeId": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "readingListId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateReadingListDto": {
        "type": "object",
        "properties": {
          "readingListId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "promoted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateReadingListPosition": {
        "type": "object",
        "properties": {
          "readingListId": {
            "type": "integer",
            "format": "int32"
          },
          "readingListItemId": {
            "type": "integer",
            "format": "int32"
          },
          "fromPosition": {
            "type": "integer",
            "format": "int32"
          },
          "toPosition": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateSeriesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "localizedName": {
            "type": "string",
            "nullable": true
          },
          "sortName": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "coverImage": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "userRating": {
            "type": "integer",
            "format": "int32"
          },
          "userReview": {
            "type": "string",
            "nullable": true
          },
          "coverImageLocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateSeriesForTagDto": {
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/CollectionTagDto"
          },
          "seriesIdsToRemove": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSeriesMetadataDto": {
        "type": "object",
        "properties": {
          "seriesMetadata": {
            "$ref": "#/components/schemas/SeriesMetadataDto"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionTagDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSeriesRatingDto": {
        "type": "object",
        "properties": {
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "userRating": {
            "type": "integer",
            "format": "int32"
          },
          "userReview": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadFileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the Entity",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "Url of the file to download from (can be null)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "preferences": {
            "$ref": "#/components/schemas/UserPreferencesDto"
          }
        },
        "additionalProperties": false
      },
      "UserPreferencesDto": {
        "type": "object",
        "properties": {
          "readingDirection": {
            "$ref": "#/components/schemas/ReadingDirection"
          },
          "scalingOption": {
            "$ref": "#/components/schemas/ScalingOption"
          },
          "pageSplitOption": {
            "$ref": "#/components/schemas/PageSplitOption"
          },
          "readerMode": {
            "$ref": "#/components/schemas/ReaderMode"
          },
          "autoCloseMenu": {
            "type": "boolean"
          },
          "bookReaderDarkMode": {
            "type": "boolean"
          },
          "bookReaderMargin": {
            "type": "integer",
            "format": "int32"
          },
          "bookReaderLineSpacing": {
            "type": "integer",
            "format": "int32"
          },
          "bookReaderFontSize": {
            "type": "integer",
            "format": "int32"
          },
          "bookReaderFontFamily": {
            "type": "string",
            "nullable": true
          },
          "bookReaderTapToPaginate": {
            "type": "boolean"
          },
          "bookReaderReadingDirection": {
            "$ref": "#/components/schemas/ReadingDirection"
          },
          "siteDarkMode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volume": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "A String representation of the volume number. Allows for floats",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chapter"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "coverImage": {
            "type": "string",
            "description": "Absolute path to the (managed) image file",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "series": {
            "$ref": "#/components/schemas/Series"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VolumeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "pagesRead": {
            "type": "integer",
            "format": "int32"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "seriesId": {
            "type": "integer",
            "format": "int32"
          },
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}